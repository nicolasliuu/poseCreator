{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/Documents/pose-creator/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useEffect, useState } from 'react';\n// import URDFLoader from 'urdf-loader';\n// import * as THREE from 'three';\n// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n// function App() {\n//   const canvasRef = useRef(null);\n//   const [robot, setRobot] = useState(null);\n//   const [viewer, setViewer] = useState(null);\n\n//   const setRobotJointValues = (robot, positions) => {\n//     Object.keys(positions).forEach((jointName) => {\n//       const joint = robot.joints[jointName];\n//       if (joint && joint.setAngle) {\n//         //joint.setAngle(positions[jointName]);\n\n//         viewer.setJointValue(jointName, positions[jointName]);\n\n//       }\n//     });\n//   };\n\n//   const animateRobot = async () => {\n//     const position1 = [ 0.5, -0.5, 0.2 ];\n//     const position2 = [ -0.5, 0.5, -0.2 ];\n//     const position3 = [ 0, 0, 0 ];\n\n//     const positions = [position1, position2, position3];\n//     for (const position of positions) {\n//       robot.joints['elbow'].setJointValue(position[0]);\n//       robot.joints['shoulder'].setJointValue(position[1]);\n//       robot.joints['wrist'].setJointValue(position[2]);\n//       await new Promise((resolve) => setTimeout(resolve, 1000));\n//     }\n//   };\n\n//   useEffect(() => {\n//     console.log(viewer)\n//   }, [viewer])\n\n//   useEffect(() => {\n//     console.log(robot)\n//   }, [robot])\n\n//   const handleAnimateButtonClick = () => {\n//     animateRobot();\n//   };\n\n//   useEffect(() => {\n//     const manager = new THREE.LoadingManager();\n//     const loader = new URDFLoader(manager);\n\n//     loader.load('./robot.urdf', (loadedRobot) => {\n//       setRobot(loadedRobot);\n//       setViewer(loader)\n//       const scene = new THREE.Scene();\n\n//       // Set up lights and camera\n//       const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n//       const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n//       directionalLight.position.set(0, 1, 0);\n\n//       const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n//       camera.position.z = 2;\n\n//       scene.add(ambientLight, directionalLight, loadedRobot);\n\n//       const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\n//       renderer.setSize(window.innerWidth, window.innerHeight);\n\n//       const controls = new OrbitControls(camera, renderer.domElement);\n//       controls.update();\n\n//       const animate = () => {\n//         requestAnimationFrame(animate);\n//         controls.update();\n//         renderer.render(scene, camera);\n//       };\n\n//       animate();\n//     });\n//   }, []);\n\n//   return (\n//     <div>\n//       <canvas ref={canvasRef} style={{ width: '100vw', height: '100vh' }} />\n//       <button onClick={handleAnimateButtonClick} style={{ position: 'absolute', top: 10, right: 10 }}>\n//         Animate Robot\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport URDFLoader from 'urdf-loader';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [jointSliders, setJointSliders] = useState({});\n  const updateJointValue = (jointName, value) => {\n    const robot = jointSliders.robot;\n    if (robot && robot.joints[jointName]) {\n      robot.joints[jointName].setJointValue(value);\n    }\n  };\n  const buildJointSliders = robot => {\n    const newJointSliders = Object.keys(robot.joints).reduce((sliders, jointName) => {\n      const joint = robot.joints[jointName];\n      sliders[jointName] = {\n        joint: joint,\n        value: joint.angle || 0\n      };\n      return sliders;\n    }, {});\n    newJointSliders.robot = robot;\n    setJointSliders(newJointSliders);\n  };\n  useEffect(() => {\n    const manager = new THREE.LoadingManager();\n    const loader = new URDFLoader(manager);\n    loader.load('./robot.urdf', robot => {\n      const scene = new THREE.Scene();\n\n      // Set up lights and camera\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n      directionalLight.position.set(0, 1, 0);\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 2;\n      scene.add(ambientLight, directionalLight, robot);\n      const renderer = new THREE.WebGLRenderer({\n        canvas: canvasRef.current\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n\n      // Set up OrbitControls\n      const controls = new OrbitControls(camera, renderer.domElement);\n      controls.target.set(0, 0, 0);\n      controls.update();\n      buildJointSliders(robot);\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n      };\n      animate();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 10\n      },\n      children: Object.entries(jointSliders).map(_ref => {\n        let [jointName, slider] = _ref;\n        return jointName !== 'robot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [jointName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: slider.joint.limit.lower,\n            max: slider.joint.limit.upper,\n            value: slider.value,\n            onChange: e => {\n              const newValue = parseFloat(e.target.value);\n              updateJointValue(jointName, newValue);\n              setJointSliders(prevSliders => ({\n                ...prevSliders,\n                [jointName]: {\n                  ...prevSliders[jointName],\n                  value: newValue\n                }\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, jointName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"AErCvv51j4HybKs2CwyjyXmVgFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","URDFLoader","THREE","OrbitControls","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","canvasRef","jointSliders","setJointSliders","updateJointValue","jointName","value","robot","joints","setJointValue","buildJointSliders","newJointSliders","Object","keys","reduce","sliders","joint","angle","manager","LoadingManager","loader","load","scene","Scene","ambientLight","AmbientLight","directionalLight","DirectionalLight","position","set","camera","PerspectiveCamera","window","innerWidth","innerHeight","z","add","renderer","WebGLRenderer","canvas","current","setSize","controls","domElement","target","update","animate","requestAnimationFrame","render","children","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","top","left","entries","map","_ref","slider","type","min","limit","lower","max","upper","onChange","e","newValue","parseFloat","prevSliders","_c","$RefreshReg$"],"sources":["/Users/nicolas/Documents/pose-creator/src/App.js"],"sourcesContent":["// import React, { useRef, useEffect, useState } from 'react';\n// import URDFLoader from 'urdf-loader';\n// import * as THREE from 'three';\n// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n// function App() {\n//   const canvasRef = useRef(null);\n//   const [robot, setRobot] = useState(null);\n//   const [viewer, setViewer] = useState(null);\n\n//   const setRobotJointValues = (robot, positions) => {\n//     Object.keys(positions).forEach((jointName) => {\n//       const joint = robot.joints[jointName];\n//       if (joint && joint.setAngle) {\n//         //joint.setAngle(positions[jointName]);\n\n//         viewer.setJointValue(jointName, positions[jointName]);\n\n//       }\n//     });\n//   };\n\n//   const animateRobot = async () => {\n//     const position1 = [ 0.5, -0.5, 0.2 ];\n//     const position2 = [ -0.5, 0.5, -0.2 ];\n//     const position3 = [ 0, 0, 0 ];\n\n//     const positions = [position1, position2, position3];\n//     for (const position of positions) {\n//       robot.joints['elbow'].setJointValue(position[0]);\n//       robot.joints['shoulder'].setJointValue(position[1]);\n//       robot.joints['wrist'].setJointValue(position[2]);\n//       await new Promise((resolve) => setTimeout(resolve, 1000));\n//     }\n//   };\n\n//   useEffect(() => {\n//     console.log(viewer)\n//   }, [viewer])\n\n//   useEffect(() => {\n//     console.log(robot)\n//   }, [robot])\n\n//   const handleAnimateButtonClick = () => {\n//     animateRobot();\n//   };\n\n//   useEffect(() => {\n//     const manager = new THREE.LoadingManager();\n//     const loader = new URDFLoader(manager);\n\n//     loader.load('./robot.urdf', (loadedRobot) => {\n//       setRobot(loadedRobot);\n//       setViewer(loader)\n//       const scene = new THREE.Scene();\n\n//       // Set up lights and camera\n//       const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n//       const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n//       directionalLight.position.set(0, 1, 0);\n\n//       const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n//       camera.position.z = 2;\n\n//       scene.add(ambientLight, directionalLight, loadedRobot);\n\n//       const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\n//       renderer.setSize(window.innerWidth, window.innerHeight);\n\n//       const controls = new OrbitControls(camera, renderer.domElement);\n//       controls.update();\n\n//       const animate = () => {\n//         requestAnimationFrame(animate);\n//         controls.update();\n//         renderer.render(scene, camera);\n//       };\n\n//       animate();\n//     });\n//   }, []);\n\n//   return (\n//     <div>\n//       <canvas ref={canvasRef} style={{ width: '100vw', height: '100vh' }} />\n//       <button onClick={handleAnimateButtonClick} style={{ position: 'absolute', top: 10, right: 10 }}>\n//         Animate Robot\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport URDFLoader from 'urdf-loader';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [jointSliders, setJointSliders] = useState({});\n\n  const updateJointValue = (jointName, value) => {\n    const robot = jointSliders.robot;\n    if (robot && robot.joints[jointName]) {\n      robot.joints[jointName].setJointValue(value);\n    }\n  };\n\n  const buildJointSliders = (robot) => {\n    const newJointSliders = Object.keys(robot.joints).reduce((sliders, jointName) => {\n      const joint = robot.joints[jointName];\n      sliders[jointName] = {\n        joint: joint,\n        value: joint.angle || 0,\n      };\n      return sliders;\n    }, {});\n    newJointSliders.robot = robot;\n    setJointSliders(newJointSliders);\n  };\n\n  useEffect(() => {\n    const manager = new THREE.LoadingManager();\n    const loader = new URDFLoader(manager);\n\n    loader.load('./robot.urdf', (robot) => {\n      const scene = new THREE.Scene();\n\n      // Set up lights and camera\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n      directionalLight.position.set(0, 1, 0);\n\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 2;\n\n      scene.add(ambientLight, directionalLight, robot);\n\n      const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n\n      // Set up OrbitControls\n      const controls = new OrbitControls(camera, renderer.domElement);\n      controls.target.set(0, 0, 0);\n      controls.update();\n\n      buildJointSliders(robot);\n\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    });\n  }, []);\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        style={{ width: '100vw', height: '100vh' }}\n      />\n      <div style={{ position: 'absolute', top: 10, left: 10 }}>\n        {Object.entries(jointSliders).map(([jointName, slider]) => (\n          jointName !== 'robot' && (\n            <div key={jointName}>\n              <label>{jointName}:</label>\n              <input\n                type=\"range\"\n                min={slider.joint.limit.lower}\n                max={slider.joint.limit.upper}\n                value={slider.value}\n                onChange={(e) => {\n                  const newValue = parseFloat(e.target.value);\n                  updateJointValue(jointName, newValue);\n                  setJointSliders((prevSliders) => ({\n                    ...prevSliders,\n                    [jointName]: { ...prevSliders[jointName], value: newValue },\n                  }));\n                }}\n              />\n            </div>\n          )\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
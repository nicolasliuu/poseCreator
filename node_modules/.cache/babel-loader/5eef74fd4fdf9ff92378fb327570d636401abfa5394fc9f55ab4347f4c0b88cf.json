{"ast":null,"code":"var _jsxFileName = \"/Users/vantony/Documents/sar_storytelling/pose-creator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport URDFLoader from 'urdf-loader';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [jointPositions, setJointPositions] = useState([{\n    joint1: 0.5,\n    joint2: 0.7,\n    joint3: 0.3\n  }, {\n    joint1: -0.5,\n    joint2: -0.7,\n    joint3: -0.3\n  }, {\n    joint1: 0.2,\n    joint2: 0.3,\n    joint3: -0.1\n  }]);\n  const [currentPositionIndex, setCurrentPositionIndex] = useState(0);\n  const setRobotJointValues = (robot, positions) => {\n    Object.keys(positions).forEach(jointName => {\n      robot.setJointValue(jointName, positions[jointName]);\n    });\n  };\n  const animateRobot = robot => {\n    setCurrentPositionIndex(prevIndex => (prevIndex + 1) % jointPositions.length);\n    setRobotJointValues(robot, jointPositions[currentPositionIndex]);\n  };\n  useEffect(() => {\n    const manager = new THREE.LoadingManager();\n    const loader = new URDFLoader(manager);\n    let robot, controls;\n    loader.load('./robot.urdf', loadedRobot => {\n      robot = loadedRobot;\n      const scene = new THREE.Scene();\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n      directionalLight.position.set(0, 1, 0);\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 2;\n      scene.add(ambientLight, directionalLight, robot);\n      const renderer = new THREE.WebGLRenderer({\n        canvas: canvasRef.current\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      controls = new OrbitControls(camera, renderer.domElement);\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n      };\n      animate();\n    });\n    return () => {\n      if (controls) {\n        controls.dispose();\n      }\n    };\n  }, []);\n  const handleAnimateButtonClick = () => {\n    if (!canvasRef.current) return;\n    animateRobot(canvasRef.current);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: 'absolute',\n        top: '10px',\n        left: '10px',\n        zIndex: 10\n      },\n      onClick: handleAnimateButtonClick,\n      children: \"Animate Robot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ekDFOLl/dXVZ9+/W09bBIpagrnM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","URDFLoader","THREE","OrbitControls","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","canvasRef","jointPositions","setJointPositions","joint1","joint2","joint3","currentPositionIndex","setCurrentPositionIndex","setRobotJointValues","robot","positions","Object","keys","forEach","jointName","setJointValue","animateRobot","prevIndex","length","manager","LoadingManager","loader","controls","load","loadedRobot","scene","Scene","ambientLight","AmbientLight","directionalLight","DirectionalLight","position","set","camera","PerspectiveCamera","window","innerWidth","innerHeight","z","add","renderer","WebGLRenderer","canvas","current","setSize","domElement","animate","requestAnimationFrame","update","render","dispose","handleAnimateButtonClick","children","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","top","left","zIndex","onClick","_c","$RefreshReg$"],"sources":["/Users/vantony/Documents/sar_storytelling/pose-creator/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport URDFLoader from 'urdf-loader';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [jointPositions, setJointPositions] = useState([\n    { joint1: 0.5, joint2: 0.7, joint3: 0.3 },\n    { joint1: -0.5, joint2: -0.7, joint3: -0.3 },\n    { joint1: 0.2, joint2: 0.3, joint3: -0.1 },\n  ]);\n  const [currentPositionIndex, setCurrentPositionIndex] = useState(0);\n\n  const setRobotJointValues = (robot, positions) => {\n    Object.keys(positions).forEach((jointName) => {\n      robot.setJointValue(jointName, positions[jointName]);\n    });\n  };\n\n  const animateRobot = (robot) => {\n    setCurrentPositionIndex((prevIndex) => (prevIndex + 1) % jointPositions.length);\n    setRobotJointValues(robot, jointPositions[currentPositionIndex]);\n  };\n\n  useEffect(() => {\n    const manager = new THREE.LoadingManager();\n    const loader = new URDFLoader(manager);\n    let robot, controls;\n\n    loader.load('./robot.urdf', (loadedRobot) => {\n      robot = loadedRobot;\n      const scene = new THREE.Scene();\n\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n      directionalLight.position.set(0, 1, 0);\n\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 2;\n\n      scene.add(ambientLight, directionalLight, robot);\n\n      const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n\n      controls = new OrbitControls(camera, renderer.domElement);\n\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    });\n\n    return () => {\n      if (controls) {\n        controls.dispose();\n      }\n    };\n  }, []);\n\n  const handleAnimateButtonClick = () => {\n    if (!canvasRef.current) return;\n    animateRobot(canvasRef.current);\n  };\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        style={{ width: '100vw', height: '100vh' }}\n      />\n      <button\n        style={{\n          position: 'absolute',\n          top: '10px',\n          left: '10px',\n          zIndex: 10,\n        }}\n        onClick={handleAnimateButtonClick}\n      >\n        Animate Robot\n      </button>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
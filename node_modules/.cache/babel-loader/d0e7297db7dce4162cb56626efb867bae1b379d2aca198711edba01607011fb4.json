{"ast":null,"code":"var _jsxFileName = \"/Users/vantony/Documents/sar_storytelling/pose-creator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport URDFLoader from 'urdf-loader';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [jointSliders, setJointSliders] = useState({});\n  const updateJointValue = (jointName, value) => {\n    const robot = jointSliders.robot;\n    if (robot && robot.joints[jointName]) {\n      robot.joints[jointName].setJointValue(value);\n    }\n  };\n  const buildJointSliders = robot => {\n    const newJointSliders = Object.keys(robot.joints).reduce((sliders, jointName) => {\n      const joint = robot.joints[jointName];\n      sliders[jointName] = {\n        joint: joint,\n        value: joint.angle || 0\n      };\n      return sliders;\n    }, {});\n    newJointSliders.robot = robot;\n    setJointSliders(newJointSliders);\n  };\n  useEffect(() => {\n    const manager = new THREE.LoadingManager();\n    const loader = new URDFLoader(manager);\n    loader.load('./robot.urdf', robot => {\n      const scene = new THREE.Scene();\n\n      // Set up lights and camera\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n      directionalLight.position.set(0, 1, 0);\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 2;\n      scene.add(ambientLight, directionalLight, robot);\n      const renderer = new THREE.WebGLRenderer({\n        canvas: canvasRef.current\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      buildJointSliders(robot);\n      const animate = () => {\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n      };\n      animate();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 10\n      },\n      children: Object.entries(jointSliders).map(_ref => {\n        let [jointName, slider] = _ref;\n        return jointName !== 'robot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [jointName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: slider.joint.limit.lower,\n            max: slider.joint.limit.upper,\n            value: slider.value,\n            onChange: e => {\n              const newValue = parseFloat(e.target.value);\n              updateJointValue(jointName, newValue);\n              setJointSliders(prevSliders => ({\n                ...prevSliders,\n                [jointName]: {\n                  ...prevSliders[jointName],\n                  value: newValue\n                }\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, jointName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"AErCvv51j4HybKs2CwyjyXmVgFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","URDFLoader","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","canvasRef","jointSliders","setJointSliders","updateJointValue","jointName","value","robot","joints","setJointValue","buildJointSliders","newJointSliders","Object","keys","reduce","sliders","joint","angle","manager","LoadingManager","loader","load","scene","Scene","ambientLight","AmbientLight","directionalLight","DirectionalLight","position","set","camera","PerspectiveCamera","window","innerWidth","innerHeight","z","add","renderer","WebGLRenderer","canvas","current","setSize","animate","requestAnimationFrame","render","children","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","top","left","entries","map","_ref","slider","type","min","limit","lower","max","upper","onChange","e","newValue","parseFloat","target","prevSliders","_c","$RefreshReg$"],"sources":["/Users/vantony/Documents/sar_storytelling/pose-creator/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport URDFLoader from 'urdf-loader';\nimport * as THREE from 'three';\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [jointSliders, setJointSliders] = useState({});\n\n  const updateJointValue = (jointName, value) => {\n    const robot = jointSliders.robot;\n    if (robot && robot.joints[jointName]) {\n      robot.joints[jointName].setJointValue(value);\n    }\n  };\n\n  const buildJointSliders = (robot) => {\n    const newJointSliders = Object.keys(robot.joints).reduce((sliders, jointName) => {\n      const joint = robot.joints[jointName];\n      sliders[jointName] = {\n        joint: joint,\n        value: joint.angle || 0,\n      };\n      return sliders;\n    }, {});\n    newJointSliders.robot = robot;\n    setJointSliders(newJointSliders);\n  };\n\n  useEffect(() => {\n    const manager = new THREE.LoadingManager();\n    const loader = new URDFLoader(manager);\n\n    loader.load('./robot.urdf', (robot) => {\n      const scene = new THREE.Scene();\n\n      // Set up lights and camera\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n      directionalLight.position.set(0, 1, 0);\n\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 2;\n\n      scene.add(ambientLight, directionalLight, robot);\n\n      const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n\n      buildJointSliders(robot);\n\n      const animate = () => {\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    });\n  }, []);\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        style={{ width: '100vw', height: '100vh' }}\n      />\n      <div style={{ position: 'absolute', top: 10, left: 10 }}>\n        {Object.entries(jointSliders).map(([jointName, slider]) => (\n          jointName !== 'robot' && (\n            <div key={jointName}>\n              <label>{jointName}:</label>\n              <input\n                type=\"range\"\n                min={slider.joint.limit.lower}\n                max={slider.joint.limit.upper}\n                value={slider.value}\n                onChange={(e) => {\n                  const newValue = parseFloat(e.target.value);\n                  updateJointValue(jointName, newValue);\n                  setJointSliders((prevSliders) => ({\n                    ...prevSliders,\n                    [jointName]: { ...prevSliders[jointName], value: newValue },\n                  }));\n                }}\n              />\n            </div>\n          )\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}